//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**
     
     
     - parameter receiptUrlDTO: (body)  
     - returns: CreateReceipt200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createReceipt(receiptUrlDTO: ReceiptUrlDTO) async throws -> CreateReceipt200Response {
        return try await createReceiptWithRequestBuilder(receiptUrlDTO: receiptUrlDTO).execute().body
    }

    /**
     
     - POST /receipts
     - parameter receiptUrlDTO: (body)  
     - returns: RequestBuilder<CreateReceipt200Response> 
     */
    open class func createReceiptWithRequestBuilder(receiptUrlDTO: ReceiptUrlDTO) -> RequestBuilder<CreateReceipt200Response> {
        let localVariablePath = "/receipts"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: receiptUrlDTO)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreateReceipt200Response>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     
     
     - parameter id: (path)  
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func deleteReceiptById(id: String) async throws {
        return try await deleteReceiptByIdWithRequestBuilder(id: id).execute().body
    }

    /**
     
     - DELETE /receipts/{id}
     - parameter id: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func deleteReceiptByIdWithRequestBuilder(id: String) -> RequestBuilder<Void> {
        var localVariablePath = "/receipts/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = APIAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     
     
     - parameter page: (query)  
     - parameter limit: (query)  
     - returns: GetAllReceiptsDefaultResponse
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getAllReceipts(page: Int, limit: Int) async throws -> GetAllReceiptsDefaultResponse {
        return try await getAllReceiptsWithRequestBuilder(page: page, limit: limit).execute().body
    }

    /**
     
     - GET /receipts
     - parameter page: (query)  
     - parameter limit: (query)  
     - returns: RequestBuilder<GetAllReceiptsDefaultResponse> 
     */
    open class func getAllReceiptsWithRequestBuilder(page: Int, limit: Int) -> RequestBuilder<GetAllReceiptsDefaultResponse> {
        let localVariablePath = "/receipts"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": (wrappedValue: page.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetAllReceiptsDefaultResponse>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     
     
     - parameter id: (path)  
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getReceiptById(id: String) async throws {
        return try await getReceiptByIdWithRequestBuilder(id: id).execute().body
    }

    /**
     
     - GET /receipts/{id}
     - parameter id: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func getReceiptByIdWithRequestBuilder(id: String) -> RequestBuilder<Void> {
        var localVariablePath = "/receipts/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = APIAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
