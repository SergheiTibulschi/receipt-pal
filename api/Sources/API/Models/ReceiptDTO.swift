//
// ReceiptDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ReceiptDTO: Codable, JSONEncodable, Hashable {

    public var companyName: String
    public var fiscalCode: String
    public var address: String
    public var registrationNumber: String
    public var items: [ItemDTO]
    public var totalAmount: Double
    public var paymentMethod: String
    public var transactionDetails: TransactionDetailsDTO
    public var receiptId: String

    public init(companyName: String, fiscalCode: String, address: String, registrationNumber: String, items: [ItemDTO], totalAmount: Double, paymentMethod: String, transactionDetails: TransactionDetailsDTO, receiptId: String) {
        self.companyName = companyName
        self.fiscalCode = fiscalCode
        self.address = address
        self.registrationNumber = registrationNumber
        self.items = items
        self.totalAmount = totalAmount
        self.paymentMethod = paymentMethod
        self.transactionDetails = transactionDetails
        self.receiptId = receiptId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case companyName
        case fiscalCode
        case address
        case registrationNumber
        case items
        case totalAmount
        case paymentMethod
        case transactionDetails
        case receiptId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(companyName, forKey: .companyName)
        try container.encode(fiscalCode, forKey: .fiscalCode)
        try container.encode(address, forKey: .address)
        try container.encode(registrationNumber, forKey: .registrationNumber)
        try container.encode(items, forKey: .items)
        try container.encode(totalAmount, forKey: .totalAmount)
        try container.encode(paymentMethod, forKey: .paymentMethod)
        try container.encode(transactionDetails, forKey: .transactionDetails)
        try container.encode(receiptId, forKey: .receiptId)
    }
}

